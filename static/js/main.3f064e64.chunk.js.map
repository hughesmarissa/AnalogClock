{"version":3,"sources":["ClockHands.js","App.js","reportWebVitals.js","index.js"],"names":["setInterval","setClock","hourHand","document","querySelector","minuteHand","secondHand","currentDate","Date","secondsRatio","getSeconds","minutesRatio","getMinutes","hoursRatio","getHours","setRotation","element","rotationRatio","style","setProperty","App","className","data-hour-hand","data-minute-hand","data-second-hand","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6IAAAA,YAAYC,EAAU,KAEtB,IAAMC,EAAWC,SAASC,cAAc,oBAClCC,EAAaF,SAASC,cAAc,sBACpCE,EAAaH,SAASC,cAAc,sBAE1C,SAASH,IACL,IAAMM,EAAc,IAAIC,KAClBC,EAAeF,EAAYG,aAAe,GAC1CC,GAAgBF,EAAeF,EAAYK,cAAgB,GAC3DC,GAAcF,EAAeJ,EAAYO,YAAc,GAE7DC,EAAYT,EAAYG,GACxBM,EAAYV,EAAYM,GACxBI,EAAYb,EAAUW,GAG1B,SAASE,EAAYC,EAASC,GAC3BD,EAAQE,MAAMC,YAAY,aAA8B,IAAhBF,GAE3ChB,K,kGCSemB,MAzBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACQ,qBAAKA,UAAU,oBAAoBC,kBAAA,IACnC,qBAAKD,UAAU,sBAAsBE,oBAAA,IACrC,qBAAKF,UAAU,sBAAsBG,oBAAA,IACrC,qBAAKH,UAAU,iBAAf,SAAgC,qBAAKA,UAAU,UAAf,iBAChC,qBAAKA,UAAU,iBAAf,SAAgC,qBAAKA,UAAU,UAAf,iBAChC,qBAAKA,UAAU,iBAAf,SAAgC,qBAAKA,UAAU,UAAf,iBAChC,qBAAKA,UAAU,iBAAf,SAAgC,qBAAKA,UAAU,UAAf,iBAChC,qBAAKA,UAAU,iBAAf,SAAgC,qBAAKA,UAAU,UAAf,iBAChC,qBAAKA,UAAU,iBAAf,SAAgC,qBAAKA,UAAU,UAAf,iBAChC,qBAAKA,UAAU,iBAAf,SAAgC,qBAAKA,UAAU,UAAf,iBAChC,qBAAKA,UAAU,iBAAf,SAAgC,qBAAKA,UAAU,UAAf,iBAChC,qBAAKA,UAAU,iBAAf,SAAgC,qBAAKA,UAAU,UAAf,iBAChC,qBAAKA,UAAU,kBAAf,SAAiC,qBAAKA,UAAU,UAAf,kBACjC,qBAAKA,UAAU,kBAAf,SAAiC,qBAAKA,UAAU,UAAf,kBACjC,qBAAKA,UAAU,kBAAf,SAAiC,qBAAKA,UAAU,UAAf,qBAEzC,wBAAQA,UAAU,aAAlB,8BCZOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASkC,eAAe,SAM1BZ,M","file":"static/js/main.3f064e64.chunk.js","sourcesContent":["setInterval(setClock, 1000);\r\n    \r\nconst hourHand = document.querySelector('[data-hour-hand]');\r\nconst minuteHand = document.querySelector('[data-minute-hand]');\r\nconst secondHand = document.querySelector('[data-second-hand]');\r\n\r\nfunction setClock() {\r\n    const currentDate = new Date();\r\n    const secondsRatio = currentDate.getSeconds() / 60;\r\n    const minutesRatio = (secondsRatio + currentDate.getMinutes()) / 60;\r\n    const hoursRatio = (minutesRatio + currentDate.getHours()) / 12;\r\n    \r\n    setRotation(secondHand, secondsRatio)\r\n    setRotation(minuteHand, minutesRatio);\r\n    setRotation(hourHand, hoursRatio);\r\n}\r\n\r\nfunction setRotation(element, rotationRatio) {\r\n   element.style.setProperty('--rotation', rotationRatio * 360);\r\n} \r\nsetClock();\r\n","import React from 'react';\nimport './App.css';\nimport ClockHands from './ClockHands';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className=\"clock\">\n                <div className=\"hand hour reverse\" data-hour-hand></div>\n                <div className=\"hand minute reverse\" data-minute-hand></div>\n                <div className=\"hand second reverse\" data-second-hand></div>\n                <div className=\"number number1\"><div className=\"reverse\">1</div></div>\n                <div className=\"number number2\"><div className=\"reverse\">2</div></div>\n                <div className=\"number number3\"><div className=\"reverse\">3</div></div>\n                <div className=\"number number4\"><div className=\"reverse\">4</div></div>\n                <div className=\"number number5\"><div className=\"reverse\">5</div></div>\n                <div className=\"number number6\"><div className=\"reverse\">6</div></div>\n                <div className=\"number number7\"><div className=\"reverse\">7</div></div>\n                <div className=\"number number8\"><div className=\"reverse\">8</div></div>\n                <div className=\"number number9\"><div className=\"reverse\">9</div></div>\n                <div className=\"number number10\"><div className=\"reverse\">10</div></div>\n                <div className=\"number number11\"><div className=\"reverse\">11</div></div>\n                <div className=\"number number12\"><div className=\"reverse\">12</div></div>\n        </div>\n        <footer className=\"App-footer\">Analog Clock</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}